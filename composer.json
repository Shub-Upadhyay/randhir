{
	"name": "revkeep/revkeep",
	"description": "RevKeep",
	"authors": [
		{
			"name": "Kyle Weishaupt",
			"email": "kyle.weishaupt@revkeepsoftware.com",
			"homepage": "https://revkeepsoftware.com",
			"role": "Developer"
		}
	],
	"homepage": "https://revkeepsoftware.com",
	"type": "project",
	"license": "proprietary",
	"readme": "README.md",
	"support": {
		"email": "info@revkeepsoftware.com"
	},
	"require": {
		"php": ">=8.1.0",
		"cakephp/authentication": "^2.10",
		"cakephp/authorization": "^2.3",
		"cakephp/cakephp": "^4.4",
		"cakephp/migrations": "^3.7",
		"cakephp/plugin-installer": "^1.3",
		"dereuromark/cakephp-databaselog": "^3.2",
		"dompdf/dompdf": "^2.0",
		"fakerphp/faker": "^1.20",
		"friendsofcake/cakepdf": "^4.1",
		"friendsofcake/cakephp-csvview": "^4.1",
		"friendsofcake/search": "^6.2",
		"iio/libmergepdf": "^4.0",
		"josegonzalez/dotenv": "^3.2",
		"league/flysystem": "^3.9",
		"league/flysystem-azure-blob-storage": "^3.1",
		"league/flysystem-memory": "^3.10",
		"league/mime-type-detection": "^1.7",
		"lorenzo/audit-stash": "^3.0",
		"microsoft/azure-storage-blob": "*",
		"mobiledetect/mobiledetectlib": "^3.74",
		"muffin/trash": "^3.1",
		"phenx/php-font-lib": "^0.5.4",
		"phenx/php-svg-lib": "^0.5.0",
		"psr/log": "^2.0",
		"setasign/fpdi": "^2.3",
		"stripe/stripe-php": "^10.2",
		"tecnickcom/tcpdf": "^6.5",
		"firebase/php-jwt": "^5.4",
		"ramsey/uuid": "^4.2",
		"guzzlehttp/guzzle": "^7.0"
	},
	"require-dev": {
		"cakephp/bake": "^2.8",
		"cakephp/cakephp-codesniffer": "^5.0",
		"cakephp/debug_kit": "^4.9",
		"dereuromark/cakephp-ide-helper": "^1.18",
		"phpstan/phpstan": "^1.8",
		"phpunit/phpunit": "^9.5",
		"psy/psysh": "@stable",
		"firebase/php-jwt": "^5.4",
		"ramsey/uuid": "^4.2",
		"guzzlehttp/guzzle": "^7.0"
	},
	"suggest": {
		"markstory/asset_compress": "An asset compression plugin which provides file concatenation and a flexible filter system for preprocessing and minification.",
		"dereuromark/cakephp-ide-helper": "After baking your code, this keeps your annotations in sync with the code evolving from there on for maximum IDE and PHPStan compatibility.",
		"phpunit/phpunit": "Allows automated tests to be run without system-wide install."
	},
	"autoload": {
		"psr-4": {
			"App\\": "src/"
		}
	},
	"autoload-dev": {
		"psr-4": {
			"App\\Test\\": "tests",
			"Cake\\Test\\": "./vendor/cakephp/cakephp/tests"
		}
	},
	"scripts": {
		"post-deployment": "php ./bin/cake.php post_deployment",
		"post-install-cmd": "App\\Console\\Installer::postInstall",
		"post-create-project-cmd": "App\\Console\\Installer::postInstall",
		"check": [
			"@test",
			"@cs-check"
		],
		"cs-check": "phpcs --colors -p  src/ tests/",
		"cs-fix": "phpcbf --colors -p src/ tests/",
		"stan": "phpstan analyse src/",
		"test": "phpunit --colors=always"
	},
	"minimum-stability": "beta",
	"prefer-stable": true,
	"config": {
		"sort-packages": true,
		"discard-changes": true,
		"allow-plugins": {
			"dealerdirect/phpcodesniffer-composer-installer": true,
			"cakephp/plugin-installer": true
		}
	}
}
$headers = array('Authorization: Bearer ' . $accessToken);